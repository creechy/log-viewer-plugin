/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fakebelieve.netbeans.plugin.logviewer;

import java.util.List;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author mock
 */
public class LogViewerPanel extends javax.swing.JPanel {

    private List<History> history = null;

    /**
     * Creates new form LogViewerPanel
     */
    public LogViewerPanel() {
        initComponents();
        lookbackConfig.setSelectedIndex(2);
        refreshConfig.setSelectedIndex(2);
    }

    public void setLogHistory(List<History> objects) {
        history = objects;
        DefaultComboBoxModel model = (DefaultComboBoxModel) logConfig.getModel();
        model.addElement("");
        for (History object : objects) {
            model.addElement(object.getCommand());
        }
    }

    public String getLogConfig() {
        return logConfig.getSelectedItem().toString();
    }

    public String getLookbackConfig() {
        return lookbackConfig.getSelectedItem().toString();
    }

    public String getRefreshConfig() {
        return refreshConfig.getSelectedItem().toString();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        logConfig = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        refreshConfig = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        lookbackConfig = new javax.swing.JComboBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViewerPanel.jLabel1.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViewerPanel.jLabel3.text")); // NOI18N

        logConfig.setEditable(true);
        logConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logConfigActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViewerPanel.jLabel2.text")); // NOI18N

        refreshConfig.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5", "10", "15", "30", "45", "60" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(LogViewerPanel.class, "LogViewerPanel.jLabel4.text")); // NOI18N

        lookbackConfig.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "500", "1000", "2000", "4000", "8000" }));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(logConfig, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jLabel3)
                        .add(0, 14, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(58, 58, 58)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(refreshConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lookbackConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(46, 46, 46)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(logConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(refreshConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(lookbackConfig, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void logConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logConfigActionPerformed
        int newIndex = logConfig.getSelectedIndex();

        if ("comboBoxEdited".equals(evt.getActionCommand())) {
            // User has typed in a string; only possible with an editable combobox
        } else if ("comboBoxChanged".equals(evt.getActionCommand())) {
            // User has selected an item; it may be the same item
            if (newIndex == 0) {
                lookbackConfig.setSelectedIndex(2);
                refreshConfig.setSelectedIndex(2);
            } else if (newIndex > 0 && newIndex <= history.size()) {
                lookbackConfig.setSelectedItem(String.valueOf(history.get(newIndex - 1).getLookback()));
                refreshConfig.setSelectedItem(String.valueOf(history.get(newIndex - 1).getRefresh()));
            }
        }
    }//GEN-LAST:event_logConfigActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox logConfig;
    private javax.swing.JComboBox lookbackConfig;
    private javax.swing.JComboBox refreshConfig;
    // End of variables declaration//GEN-END:variables
}
